#! /usr/bin/env python

import sys

def main(): 
    #
    # Imports
    #
    import metadata
    import time
    import os
    from misc import TerminalColors
    
    #
    # check input and get commandline args
    #
    try: analysisfolder = metadata.AnalysisFolder(sys.argv[1])
    except IndexError: sys.stderr.write('please supply a commandline on format:\n'+os.path.basename(__file__)+' <analysis-output-folder> [list settings] [settingName=Value]\n');sys.exit()
    
    #
    # check analysis folder
    #
    if not analysisfolder.checkIntegrity() == 'PASS':
        if analysisfolder.checkIntegrity() == 'FAIL: The folder does not exist.': analysisfolder.create()
        else:
            print analysisfolder.checkIntegrity()+'\nERROR: Now exiting'

    #
    # create a logfile
    #
    logfile = open(analysisfolder.logpath+'/'+time.strftime("%y%m%d-%H:%M:%S",time.localtime())+'_dbs_change_settings','w',1)
    logfile.write('cmd: '+' '.join(sys.argv)+'\n')
    analysisfolder.logfile = logfile
    
    #
    # check that there is some instructions on the commandline otherwise print error message
    #
    try:
        settings2change = sys.argv[2:]
        if not settings2change: raise IndexError
    except IndexError:
        msg = '#ERROR_MSG#'+time.strftime("%Y-%m-%d:%H:%M:%S",time.localtime())+'# Please supply atleast one variable name and value on your commandline on the format variableName=value or include the term "listsettings" to get a list of available variable names (currently: "'+' '.join(sys.argv)+'"), exiting.\n'
        logfile.write(msg)
        sys.stderr.write(msg)
        sys.exit(1)

    #
    # if there is an instruction to change/set a setting value do that
    #
    for setting2change in settings2change:
        if setting2change == 'listsettings': continue
        variableName,value = setting2change.split('=')
        analysisfolder.settings.setVariable(variableName,value)

    analysisfolder.settings.saveToDb()
    
    #
    # if "listsettings" on commandline print a list of available settings current values etc
    #
    if 'listsettings' in settings2change:
        longestName = max([len(x) for x in analysisfolder.settings.explenations.keys()])
        sys.stderr.write('VariableName:'+''.join(' ' for i in range(longestName-len('VariableName:')))+'\t'+'Description:'+'\n')
        for variableName, description in analysisfolder.settings.explenations.iteritems():
            if analysisfolder.settings.TypeOfValues[variableName] == 'filename':
                if analysisfolder.settings.__dict__[variableName]==None or not os.path.isfile( analysisfolder.settings.__dict__[variableName] ):txt_color = TerminalColors.Red
                else:txt_color = ''
                sys.stderr.write(txt_color+variableName+TerminalColors.Color_Off+''.join(' ' for i in range(longestName-len(variableName)))+'\t'+description+' ('+txt_color+'currentValue='+str(analysisfolder.settings.__dict__[variableName])+TerminalColors.Color_Off+')\n')
            else:
                sys.stderr.write(variableName+''.join(' ' for i in range(longestName-len(variableName)))+'\t'+description+' (currentValue='+str(analysisfolder.settings.__dict__[variableName])+')\n')
 
    logfile.write('dbs_change_settings FINISHED\n')

if __name__ == "__main__": main()